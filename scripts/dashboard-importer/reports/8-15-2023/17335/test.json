{
    "displayName": "RabbitMQ-Stream",
    "dashboardFilters": [
        {
            "labelKey": "namespace",
            "templateVariable": "namespace",
            "stringValue": "",
            "filterType": "RESOURCE_LABEL"
        },
        {
            "labelKey": "rabbitmq_cluster",
            "templateVariable": "rabbitmq_cluster",
            "stringValue": "",
            "filterType": "METRIC_LABEL"
        }
    ],
    "mosaicLayout": {
        "columns": 24,
        "tiles": [
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_publishers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                        }
                    },
                    "title": "Stream publishers"
                },
                "xPos": 0,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_received_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                        }
                    },
                    "title": "Stream messages received / s"
                },
                "xPos": 4,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_confirmed_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                        }
                    },
                    "title": "Stream messages confirmed to publishers / s"
                },
                "xPos": 8,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_consumers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                        }
                    },
                    "title": "Stream consumers"
                },
                "xPos": 12,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (irate(rabbitmq_global_messages_delivered_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                        }
                    },
                    "title": "Stream messages delivered / s"
                },
                "xPos": 16,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "scorecard": {
                        "sparkChartView": {
                            "sparkChartType": "SPARK_LINE"
                        },
                        "thresholds": [],
                        "timeSeriesQuery": {
                            "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_access_refused_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_authentication_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_frame_too_large_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_internal_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_precondition_failed_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_publisher_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_authentication_failure_loopback_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_challenge_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_mechanism_not_supported_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_not_available_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_unknown_frame_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}) +\n\nsum by(rabbitmq_cluster) (rabbitmq_global_stream_error_vhost_access_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})\n"
                        }
                    },
                    "title": "Errors since boot"
                },
                "xPos": 20,
                "yPos": 0,
                "height": 4,
                "width": 4
            },
            {
                "widget": {
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sort_desc(sum by(rabbitmq_node) (rabbitmq_global_publishers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}))"
                                },
                                "legendTemplate": "{{rabbitmq_node}}"
                            }
                        ]
                    }
                },
                "xPos": 0,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_received_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}))"
                                },
                                "legendTemplate": "{{rabbitmq_node}}"
                            }
                        ]
                    }
                },
                "xPos": 4,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_confirmed_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}))"
                                },
                                "legendTemplate": "{{rabbitmq_node}}"
                            }
                        ]
                    }
                },
                "xPos": 8,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sort_desc(sum by(rabbitmq_node) (rabbitmq_global_consumers{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}))"
                                },
                                "legendTemplate": "{{rabbitmq_node}}"
                            }
                        ]
                    }
                },
                "xPos": 12,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sort_desc(sum by(rabbitmq_node) (irate(rabbitmq_global_messages_delivered_total{protocol=\"stream\"}[60s]) * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"}))"
                                },
                                "legendTemplate": "{{rabbitmq_node}}"
                            }
                        ]
                    }
                },
                "xPos": 16,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "title": "Learn more",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 20,
                "yPos": 4,
                "height": 6,
                "width": 4
            },
            {
                "widget": {
                    "title": "Stream publishers",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 0,
                "yPos": 10,
                "height": 9,
                "width": 12
            },
            {
                "widget": {
                    "title": "Stream consumers",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 12,
                "yPos": 10,
                "height": 9,
                "width": 12
            },
            {
                "widget": {
                    "title": "Stream messages received / s",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 0,
                "yPos": 19,
                "height": 9,
                "width": 12
            },
            {
                "widget": {
                    "title": "Stream messages delivered / s",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 12,
                "yPos": 19,
                "height": 9,
                "width": 12
            },
            {
                "widget": {
                    "title": "Stream messages confirmed to publishers / s",
                    "xyChart": {
                        "dataSets": []
                    }
                },
                "xPos": 0,
                "yPos": 28,
                "height": 9,
                "width": 12
            },
            {
                "widget": {
                    "title": "Errors since boot",
                    "xyChart": {
                        "dataSets": [
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_access_refused_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "access_refused"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_authentication_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "error_authentication_failure"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_frame_too_large_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "frame_too_large"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_internal_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "internal_error"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_precondition_failed_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "precondition_failed"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_publisher_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "publisher_does_not_exist"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_authentication_failure_loopback_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "sasl_authentication_failure_loopback"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_challenge_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "sasl_challenge"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_error_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "sasl_error"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_sasl_mechanism_not_supported_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "sasl_mechanism_not_supported"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "stream_already_exists"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "stream_does_not_exist"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_stream_not_available_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "stream_not_available"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_already_exists_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "subscription_id_already_exists"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_subscription_id_does_not_exist_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "subscription_id_does_not_exist"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_unknown_frame_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "error_unknown_frame"
                            },
                            {
                                "plotType": "LINE",
                                "timeSeriesQuery": {
                                    "prometheusQuery": "sum by(rabbitmq_cluster) (rabbitmq_global_stream_error_vhost_access_failure_total{protocol=\"stream\"} * on(instance) group_left(rabbitmq_cluster, rabbitmq_node) rabbitmq_identity_info{rabbitmq_cluster=\"${rabbitmq_cluster.value}\", namespace=\"${namespace.value}\"})"
                                },
                                "legendTemplate": "vhost_access_failure"
                            }
                        ]
                    }
                },
                "xPos": 0,
                "yPos": 37,
                "height": 13,
                "width": 24
            }
        ]
    }
}